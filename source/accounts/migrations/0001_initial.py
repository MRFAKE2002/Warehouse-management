# Generated by Django 5.0.3 on 2024-04-13 20:20

import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'این نام کاربری توسط شخص دیگری به کار گرفته شده است'}, help_text='وارد تمودن نام کاربری الزامی ست. نام کاربری شامل حداکثر 150 حرف انگلیسی یا کارکتر های @/./+/-/_ می باشد', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='نام کاربری')),
                ('email', models.EmailField(error_messages={'unique:ایمیل توسط کاربر دیگری به کار گرفته شده است'}, help_text='وارد نمودن ایمیل الزامی می باشد', max_length=150, unique=True, verbose_name='ایمیل')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='نام ')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='نام خانوادگی')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
        ),
    ]
